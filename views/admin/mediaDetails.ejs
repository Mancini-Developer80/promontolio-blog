<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include('../partials/general/head') %>
    <title>Media Details - PromontolioBlog</title>
    <style>
      .admin-content {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
      }

      .page-header {
        background: linear-gradient(135deg, #3498db, #74b8e6);
        color: white;
        padding: 2rem;
        border-radius: 12px;
        margin-bottom: 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        box-shadow: 0 4px 20px rgba(139, 90, 60, 0.3);
        position: relative;
      }

      .back-btn {
        position: absolute;
        top: 2rem;
        left: 2rem;
        color: rgba(255, 255, 255, 0.9);
        text-decoration: none;
        padding: 0.5rem 1rem;
        border-radius: 6px;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .back-btn:hover {
        color: white;
        background: rgba(255, 255, 255, 0.1);
      }

      .page-title {
        margin: 0;
        font-size: 2rem;
        text-align: center;
        flex: 1;
      }

      .action-buttons {
        display: flex;
        gap: 0.5rem;
      }

      .btn {
        padding: 0.5rem 1rem;
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-radius: 6px;
        text-decoration: none;
        color: white;
        background: rgba(255, 255, 255, 0.1);
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.9rem;
        cursor: pointer;
      }

      .btn:hover {
        background: rgba(255, 255, 255, 0.2);
        border-color: rgba(255, 255, 255, 0.5);
        color: white;
      }

      .btn-danger {
        background: rgba(220, 53, 69, 0.2);
        border-color: rgba(220, 53, 69, 0.5);
      }

      .btn-danger:hover {
        background: rgba(220, 53, 69, 0.3);
        border-color: rgba(220, 53, 69, 0.7);
      }

      .media-details {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 2rem;
        margin-bottom: 2rem;
      }

      .media-preview {
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        position: sticky;
        top: 2rem;
        height: fit-content;
      }

      .preview-header {
        background: #f8f9fa;
        padding: 1rem 1.5rem;
        border-bottom: 1px solid #e9ecef;
        font-weight: 600;
        color: #333;
      }

      .preview-content {
        padding: 2rem;
        text-align: center;
      }

      .preview-image {
        max-width: 100%;
        max-height: 400px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      }

      .preview-file {
        padding: 3rem;
        color: #3498db;
      }

      .preview-file i {
        font-size: 5rem;
        margin-bottom: 1rem;
      }

      .preview-file .file-name {
        font-size: 1.1rem;
        font-weight: 600;
        color: #333;
        margin-bottom: 0.5rem;
      }

      .preview-file .file-size {
        color: #666;
      }

      .media-info {
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        overflow: hidden;
      }

      .info-header {
        background: #f8f9fa;
        padding: 1rem 1.5rem;
        border-bottom: 1px solid #e9ecef;
        font-weight: 600;
        color: #333;
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .info-content {
        padding: 2rem;
      }

      .edit-form {
        display: grid;
        gap: 1.5rem;
      }

      .form-group {
        display: grid;
        gap: 0.5rem;
      }

      .form-label {
        font-weight: 600;
        color: #333;
        font-size: 0.9rem;
      }

      .form-input,
      .form-select,
      .form-textarea {
        padding: 0.75rem;
        border: 2px solid #e9ecef;
        border-radius: 6px;
        font-size: 0.9rem;
        transition: border-color 0.3s ease;
        font-family: inherit;
      }

      .form-input:focus,
      .form-select:focus,
      .form-textarea:focus {
        outline: none;
        border-color: #3498db;
      }

      .form-textarea {
        resize: vertical;
        min-height: 80px;
      }

      .tag-input {
        background: white;
        border: 2px solid #e9ecef;
        border-radius: 6px;
        padding: 0.5rem;
        min-height: 45px;
        display: flex;
        flex-wrap: wrap;
        gap: 0.25rem;
        cursor: text;
      }

      .tag-input:focus-within {
        border-color: #3498db;
      }

      .tag {
        background: #3498db;
        color: white;
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        font-size: 0.8rem;
        display: flex;
        align-items: center;
        gap: 0.25rem;
      }

      .tag-remove {
        background: none;
        border: none;
        color: white;
        cursor: pointer;
        padding: 0;
        width: 16px;
        height: 16px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        transition: background-color 0.2s ease;
      }

      .tag-remove:hover {
        background: rgba(255, 255, 255, 0.2);
      }

      .tag-input input {
        border: none;
        outline: none;
        flex: 1;
        min-width: 120px;
        padding: 0.25rem;
        font-family: inherit;
      }

      .metadata-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1rem;
        margin-bottom: 2rem;
        padding: 1.5rem;
        background: #f8f9fa;
        border-radius: 8px;
      }

      .metadata-item {
        display: grid;
        gap: 0.25rem;
      }

      .metadata-label {
        font-size: 0.8rem;
        color: #666;
        text-transform: uppercase;
        letter-spacing: 0.5px;
      }

      .metadata-value {
        font-weight: 600;
        color: #333;
      }

      .form-actions {
        display: flex;
        gap: 1rem;
        justify-content: flex-end;
        padding-top: 1.5rem;
        border-top: 1px solid #e9ecef;
      }

      .btn-primary {
        background: #3498db;
        color: white;
        border: 2px solid #3498db;
      }

      .btn-primary:hover {
        background: #6c4029;
        border-color: #6c4029;
      }

      .btn-secondary {
        background: #6c757d;
        color: white;
        border: 2px solid #6c757d;
      }

      .btn-secondary:hover {
        background: #545b62;
        border-color: #545b62;
      }

      .usage-stats {
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        margin-top: 2rem;
        overflow: hidden;
      }

      .stats-header {
        background: #f8f9fa;
        padding: 1rem 1.5rem;
        border-bottom: 1px solid #e9ecef;
        font-weight: 600;
        color: #333;
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .stats-content {
        padding: 2rem;
      }

      .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 1rem;
        margin-bottom: 2rem;
      }

      .stat-item {
        text-align: center;
        padding: 1rem;
        background: #f8f9fa;
        border-radius: 8px;
      }

      .stat-number {
        font-size: 2rem;
        font-weight: 700;
        color: #3498db;
        margin-bottom: 0.25rem;
      }

      .stat-label {
        font-size: 0.8rem;
        color: #666;
        text-transform: uppercase;
        letter-spacing: 0.5px;
      }

      .usage-list {
        list-style: none;
        padding: 0;
        margin: 0;
      }

      .usage-item {
        padding: 0.75rem;
        border: 1px solid #e9ecef;
        border-radius: 6px;
        margin-bottom: 0.5rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .usage-item:last-child {
        margin-bottom: 0;
      }

      .usage-location {
        font-weight: 600;
        color: #333;
      }

      .usage-date {
        font-size: 0.8rem;
        color: #666;
      }

      @media (max-width: 768px) {
        .admin-content {
          padding: 1rem;
        }

        .media-details {
          grid-template-columns: 1fr;
          gap: 1rem;
        }

        .metadata-grid {
          grid-template-columns: 1fr;
        }

        .page-header {
          flex-direction: column;
          gap: 1rem;
          padding-top: 3rem;
        }

        .back-btn {
          top: 1rem;
          left: 1rem;
        }
      }
    </style>
  </head>
  <body>
    <%- include('../partials/general/dashboardNavbar') %>

    <div class="admin-content">
      <!-- Page Header -->
      <div class="page-header">
        <a href="/admin/media" class="back-btn">
          <i class="fas fa-arrow-left"></i>
          Back to Library
        </a>
        <h1 class="page-title"><%= media.title || media.originalName %></h1>
        <div class="action-buttons">
          <button class="btn" id="copyUrlBtn" data-url="<%= media.url %>">
            <i class="fas fa-copy"></i>
            Copy URL
          </button>
          <a href="<%= media.url %>" target="_blank" class="btn">
            <i class="fas fa-external-link-alt"></i>
            View
          </a>
          <button class="btn btn-danger" id="deleteMediaBtn" data-media-id="<%= media._id %>">
            <i class="fas fa-trash"></i>
            Delete
          </button>
        </div>
      </div>

      <!-- Media Details -->
      <div class="media-details">
        <!-- Preview -->
        <div class="media-preview">
          <div class="preview-header">
            <i class="fas fa-eye"></i>
            Preview
          </div>
          <div class="preview-content">
            <% if (media.category === 'image') { %>
              <img 
                src="<%= media.url %>" 
                alt="<%= media.alt || media.title %>" 
                class="preview-image"
              />
            <% } else { %>
              <div class="preview-file">
                <i class="fas fa-<%= media.fileType === 'pdf' ? 'file-pdf' : media.fileType === 'document' ? 'file-word' : media.fileType === 'video' ? 'file-video' : media.fileType === 'audio' ? 'file-audio' : 'file' %>"></i>
                <div class="file-name"><%= media.originalName %></div>
                <div class="file-size"><%= media.formattedSize %></div>
              </div>
            <% } %>
          </div>
        </div>

        <!-- Information -->
        <div class="media-info">
          <div class="info-header">
            <i class="fas fa-info-circle"></i>
            Media Information
          </div>
          <div class="info-content">
            <!-- File Metadata -->
            <div class="metadata-grid">
              <div class="metadata-item">
                <div class="metadata-label">File Name</div>
                <div class="metadata-value"><%= media.originalName %></div>
              </div>
              <div class="metadata-item">
                <div class="metadata-label">File Size</div>
                <div class="metadata-value"><%= media.formattedSize %></div>
              </div>
              <div class="metadata-item">
                <div class="metadata-label">File Type</div>
                <div class="metadata-value"><%= media.mimeType %></div>
              </div>
              <div class="metadata-item">
                <div class="metadata-label">Category</div>
                <div class="metadata-value" style="text-transform: capitalize;"><%= media.category %></div>
              </div>
              <% if (media.dimensions) { %>
              <div class="metadata-item">
                <div class="metadata-label">Dimensions</div>
                <div class="metadata-value"><%= media.dimensions.width %> × <%= media.dimensions.height %></div>
              </div>
              <% } %>
              <div class="metadata-item">
                <div class="metadata-label">Uploaded</div>
                <div class="metadata-value"><%= media.createdAt.toLocaleDateString() %></div>
              </div>
            </div>

            <!-- Edit Form -->
            <form class="edit-form" id="editForm">
              <div class="form-group">
                <label class="form-label">Title</label>
                <input 
                  type="text" 
                  class="form-input" 
                  name="title" 
                  value="<%= media.title || '' %>"
                  placeholder="Enter a descriptive title..."
                />
              </div>

              <div class="form-group">
                <label class="form-label">Description</label>
                <textarea 
                  class="form-textarea" 
                  name="description" 
                  placeholder="Describe this media file..."
                ><%= media.description || '' %></textarea>
              </div>

              <% if (media.category === 'image') { %>
              <div class="form-group">
                <label class="form-label">Alt Text</label>
                <input 
                  type="text" 
                  class="form-input" 
                  name="alt" 
                  value="<%= media.alt || '' %>"
                  placeholder="Alternative text for accessibility..."
                />
              </div>
              <% } %>

              <div class="form-group">
                <label class="form-label">Usage</label>
                <select class="form-select" name="usage">
                  <option value="general" <%= media.usage === 'general' ? 'selected' : '' %>>General</option>
                  <option value="blog" <%= media.usage === 'blog' ? 'selected' : '' %>>Blog Content</option>
                  <option value="product" <%= media.usage === 'product' ? 'selected' : '' %>>Product Images</option>
                  <option value="hero" <%= media.usage === 'hero' ? 'selected' : '' %>>Hero Images</option>
                  <option value="gallery" <%= media.usage === 'gallery' ? 'selected' : '' %>>Gallery</option>
                </select>
              </div>

              <div class="form-group">
                <label class="form-label">Tags</label>
                <div class="tag-input" id="tagInput">
                  <% if (media.tags && media.tags.length > 0) { %>
                    <% media.tags.forEach(tag => { %>
                      <div class="tag">
                        <%= tag %>
                        <button type="button" class="tag-remove" data-tag-text="<%= tag %>">
                          <i class="fas fa-times"></i>
                        </button>
                      </div>
                    <% }) %>
                  <% } %>
                  <input 
                    type="text" 
                    placeholder="Add tags and press Enter..."
                    id="tagInputFieldDetails"
                  />
                </div>
                <input type="hidden" name="tags" id="tagsHidden" value="<%= media.tags ? media.tags.join(',') : '' %>" />
              </div>

              <div class="form-actions">
                <button type="button" class="btn btn-secondary" id="resetFormBtn">
                  <i class="fas fa-undo"></i>
                  Reset
                </button>
                <button type="submit" class="btn btn-primary">
                  <i class="fas fa-save"></i>
                  Save Changes
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>

      <!-- Usage Statistics -->
      <div class="usage-stats">
        <div class="stats-header">
          <i class="fas fa-chart-bar"></i>
          Usage Statistics
        </div>
        <div class="stats-content">
          <div class="stats-grid">
            <div class="stat-item">
              <div class="stat-number"><%= media.usage_count || 0 %></div>
              <div class="stat-label">Times Used</div>
            </div>
            <div class="stat-item">
              <div class="stat-number"><%= media.views || 0 %></div>
              <div class="stat-label">Views</div>
            </div>
            <div class="stat-item">
              <div class="stat-number"><%= media.downloads || 0 %></div>
              <div class="stat-label">Downloads</div>
            </div>
          </div>

          <% if (media.usedIn && media.usedIn.length > 0) { %>
          <h4>Used In:</h4>
          <ul class="usage-list">
            <% media.usedIn.forEach(usage => { %>
            <li class="usage-item">
              <span class="usage-location"><%= usage.location %></span>
              <span class="usage-date"><%= usage.date.toLocaleDateString() %></span>
            </li>
            <% }) %>
          </ul>
          <% } else { %>
          <p style="text-align: center; color: #666; margin: 2rem 0;">
            This media file hasn't been used yet.
          </p>
          <% } %>
        </div>
      </div>
    </div>

    <!-- Data script for client-side JavaScript -->
    <script id="media-data" type="application/json">
      <%- JSON.stringify({ tags: media.tags || [] }) %>
    </script>

    <script>
      // Get data from the JSON script tag
      const mediaData = JSON.parse(document.getElementById('media-data').textContent);
      let tags = mediaData.tags;

      // Tag input handler
      function handleTagInput(e) {
        if (e.key === 'Enter' && e.target.value.trim()) {
          e.preventDefault();
          const tag = e.target.value.trim();
          if (!tags.includes(tag)) {
            tags.push(tag);
            updateTagDisplay();
            document.getElementById('tagsHidden').value = tags.join(',');
          }
          e.target.value = '';
        }
      }

      // Remove tag
      function removeTag(tagText) {
        const index = tags.indexOf(tagText);
        if (index > -1) {
          tags.splice(index, 1);
          updateTagDisplay();
          document.getElementById('tagsHidden').value = tags.join(',');
        }
      }

      // Update tag display
      function updateTagDisplay() {
        const tagInput = document.getElementById('tagInput');
        const inputElement = tagInput.querySelector('#tagInputFieldDetails');
        
        // Remove existing tags
        tagInput.querySelectorAll('.tag').forEach(tag => tag.remove());
        
        // Add current tags
        tags.forEach(tag => {
          const tagElement = document.createElement('div');
          tagElement.className = 'tag';
          tagElement.innerHTML = `
            ${tag}
            <button type="button" class="tag-remove" data-tag-text="${tag}">
              <i class="fas fa-times"></i>
            </button>
          `;
          
          // Add event listener to remove button
          const removeBtn = tagElement.querySelector('.tag-remove');
          removeBtn.addEventListener('click', function() {
            removeTag(this.dataset.tagText);
          });
          
          tagInput.insertBefore(tagElement, inputElement);
        });
      }

      // Initialize event listeners
      document.addEventListener('DOMContentLoaded', function() {
        // Copy URL button
        const copyBtn = document.getElementById('copyUrlBtn');
        if (copyBtn) {
          copyBtn.addEventListener('click', function() {
            copyToClipboard(this.dataset.url);
          });
        }

        // Delete media button
        const deleteBtn = document.getElementById('deleteMediaBtn');
        if (deleteBtn) {
          deleteBtn.addEventListener('click', function() {
            deleteMedia(this.dataset.mediaId);
          });
        }

        // Reset form button
        const resetBtn = document.getElementById('resetFormBtn');
        if (resetBtn) {
          resetBtn.addEventListener('click', function() {
            location.reload();
          });
        }

        // Form submit
        const editForm = document.getElementById('editForm');
        if (editForm) {
          editForm.addEventListener('submit', updateMedia);
        }

        // Tag input
        const tagInputField = document.getElementById('tagInputFieldDetails');
        if (tagInputField) {
          tagInputField.addEventListener('keydown', handleTagInput);
        }

        // Existing tag remove buttons
        document.querySelectorAll('.tag-remove').forEach(btn => {
          btn.addEventListener('click', function() {
            removeTag(this.dataset.tagText);
          });
        });
      });

      // Update media
      async function updateMedia(e) {
        e.preventDefault();
        
        const formData = new FormData(e.target);
        const data = Object.fromEntries(formData.entries());
        
        try {
          const response = await fetch(`/admin/media/<%= media._id %>`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
          });
          
          if (response.ok) {
            alert('Media updated successfully!');
            location.reload();
          } else {
            throw new Error('Update failed');
          }
        } catch (error) {
          alert('Failed to update media. Please try again.');
        }
      }

      // Copy to clipboard
      function copyToClipboard(text) {
        navigator.clipboard.writeText(text).then(() => {
          alert('URL copied to clipboard!');
        }).catch(err => {
          // Fallback for older browsers
          const textArea = document.createElement('textarea');
          textArea.value = text;
          document.body.appendChild(textArea);
          textArea.select();
          document.execCommand('copy');
          document.body.removeChild(textArea);
          alert('URL copied to clipboard!');
        });
      }

      // Delete media
      function deleteMedia(mediaId) {
        if (confirm('Are you sure you want to delete this media file? This action cannot be undone.')) {
          fetch(`/admin/media/${mediaId}`, {
            method: 'DELETE'
          })
          .then(response => {
            if (response.ok) {
              alert('Media deleted successfully!');
              window.location.href = '/admin/media';
            } else {
              throw new Error('Delete failed');
            }
          })
          .catch(error => {
            alert('Failed to delete media. Please try again.');
          });
        }
      }
    </script>
  </body>
</html>
