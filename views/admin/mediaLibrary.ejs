<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include('../partials/general/head') %>
    <title>Media Library - PromontolioBlog</title>
    <style>
      .admin-content {
        max-width: 1400px;
        margin: 0 auto;
        padding: 2rem;
      }

      .page-header {
        background: linear-gradient(135deg, #3498db, #74b8e6);
        color: white;
        padding: 2rem;
        border-radius: 12px;
        margin-bottom: 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        box-shadow: 0 4px 20px rgba(52, 152, 219, 0.3);
      }

      .page-title {
        margin: 0;
        font-size: 2rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
      }

      .upload-btn {
        background: rgba(255, 255, 255, 0.2);
        color: white;
        padding: 0.75rem 1.5rem;
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-radius: 8px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .upload-btn:hover {
        background: rgba(255, 255, 255, 0.3);
        border-color: rgba(255, 255, 255, 0.5);
        color: white;
        transform: translateY(-2px);
      }

      .media-stats {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
      }

      .stat-card {
        background: white;
        padding: 1.5rem;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        text-align: center;
        border-left: 4px solid #3498db;
      }

      .stat-number {
        font-size: 2.5rem;
        font-weight: 700;
        color: #3498db;
        margin-bottom: 0.5rem;
      }

      .stat-label {
        color: #666;
        font-size: 0.9rem;
        margin: 0;
        text-transform: uppercase;
        letter-spacing: 0.5px;
      }

      .media-filters {
        background: white;
        padding: 1.5rem;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 2rem;
        display: flex;
        gap: 1rem;
        align-items: center;
        flex-wrap: wrap;
      }

      .filter-group {
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .filter-label {
        font-weight: 600;
        color: #333;
        font-size: 0.9rem;
      }

      .filter-select,
      .filter-input {
        padding: 0.5rem 0.75rem;
        border: 2px solid #e9ecef;
        border-radius: 6px;
        font-size: 0.9rem;
        transition: border-color 0.3s ease;
      }

      .filter-select:focus,
      .filter-input:focus {
        outline: none;
        border-color: #3498db;
      }

      .media-grid {
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
      }

      .grid-header {
        background: #f8f9fa;
        padding: 1rem 1.5rem;
        border-bottom: 1px solid #e9ecef;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .view-toggles {
        display: flex;
        background: #e9ecef;
        border-radius: 6px;
        overflow: hidden;
      }

      .view-toggle {
        padding: 0.5rem 0.75rem;
        background: none;
        border: none;
        cursor: pointer;
        transition: all 0.3s ease;
      }

      .view-toggle.active {
        background: #3498db;
        color: white;
      }

      .media-items {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 1.5rem;
        padding: 2rem;
      }

      .media-items.list-view {
        grid-template-columns: 1fr;
        gap: 1rem;
      }

      .media-item {
        background: #f8f9fa;
        border-radius: 8px;
        overflow: hidden;
        transition: all 0.3s ease;
        cursor: pointer;
        border: 2px solid transparent;
        position: relative;
      }

      .media-item:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        border-color: #3498db;
      }

      .media-item:focus {
        outline: none;
        border-color: #3498db;
        box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);
      }

      .media-item:hover::before {
        content: 'üëÅÔ∏è View Details';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: rgba(52, 152, 219, 0.95);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 6px;
        font-size: 0.8rem;
        font-weight: 600;
        z-index: 10;
        opacity: 0;
        animation: fadeInTooltip 0.3s ease forwards;
      }

      @keyframes fadeInTooltip {
        to {
          opacity: 1;
        }
      }

      .media-item:active {
        transform: translateY(-1px);
        transition: all 0.1s ease;
      }

      .media-item.list-view {
        display: flex;
        align-items: center;
        padding: 1rem;
        gap: 1rem;
      }

      .media-preview {
        width: 100%;
        height: 150px;
        background: #e9ecef;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        overflow: hidden;
      }

      .media-preview.list-view {
        width: 80px;
        height: 80px;
        flex-shrink: 0;
        border-radius: 6px;
      }

      .media-preview img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }

      .media-preview .file-icon {
        font-size: 3rem;
        color: #3498db;
      }

      .media-preview.list-view .file-icon {
        font-size: 2rem;
      }

      .media-info {
        padding: 1rem;
        flex: 1;
      }

      .media-info.list-view {
        padding: 0;
      }

      .media-title {
        font-weight: 600;
        color: #333;
        margin-bottom: 0.25rem;
        font-size: 0.9rem;
        line-height: 1.3;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
      }

      .media-meta {
        font-size: 0.8rem;
        color: #666;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .media-type {
        background: #3498db;
        color: white;
        padding: 0.2rem 0.5rem;
        border-radius: 12px;
        font-size: 0.7rem;
        text-transform: uppercase;
        font-weight: 600;
      }

      .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        color: #666;
      }

      .empty-state i {
        font-size: 4rem;
        color: #dee2e6;
        margin-bottom: 1rem;
      }

      .empty-state h3 {
        margin-bottom: 1rem;
        color: #333;
      }

      .pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 0.5rem;
        margin-top: 2rem;
      }

      .pagination a,
      .pagination span {
        padding: 0.5rem 0.75rem;
        border: 1px solid #dee2e6;
        border-radius: 4px;
        text-decoration: none;
        color: #333;
        transition: all 0.3s ease;
      }

      .pagination a:hover {
        background: #3498db;
        color: white;
        border-color: #3498db;
      }

      .pagination .current {
        background: #3498db;
        color: white;
        border-color: #3498db;
      }

      .bulk-actions {
        background: #fff3cd;
        border: 1px solid #ffeaa7;
        border-radius: 8px;
        padding: 1rem;
        margin-bottom: 1rem;
        display: none;
      }

      .bulk-actions.show {
        display: block;
      }

      @media (max-width: 768px) {
        .admin-content {
          padding: 1rem;
        }

        .page-header {
          flex-direction: column;
          gap: 1rem;
          text-align: center;
        }

        .media-filters {
          flex-direction: column;
          align-items: stretch;
        }

        .media-items {
          grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
          gap: 1rem;
          padding: 1rem;
        }
      }

      /* Lightbox Modal */
      .lightbox {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.9);
        z-index: 1000;
        cursor: zoom-out;
      }

      .lightbox.show {
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .lightbox-content {
        max-width: 90%;
        max-height: 90%;
        position: relative;
      }

      .lightbox-image {
        max-width: 100%;
        max-height: 100%;
        border-radius: 8px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
      }

      .lightbox-close {
        position: absolute;
        top: -40px;
        right: 0;
        background: rgba(255, 255, 255, 0.2);
        color: white;
        border: none;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        cursor: pointer;
        font-size: 1.2rem;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: background-color 0.3s ease;
      }

      .lightbox-close:hover {
        background: rgba(255, 255, 255, 0.3);
      }

      .lightbox-title {
        position: absolute;
        bottom: -40px;
        left: 0;
        color: white;
        font-size: 1rem;
        font-weight: 600;
      }
    </style>
  </head>
  <body>
    <%- include('../partials/general/dashboardNavbar') %>

    <div class="admin-content">
      <!-- Page Header -->
      <div class="page-header">
        <h1 class="page-title">
          <i class="fas fa-images"></i>
          Media Library
        </h1>
        <a href="/admin/media/upload" class="upload-btn">
          <i class="fas fa-plus"></i>
          Upload Media
        </a>
      </div>

      <!-- Media Statistics -->
      <div class="media-stats">
        <% stats.forEach(stat => { %>
        <div class="stat-card">
          <div class="stat-number"><%= stat.count %></div>
          <p class="stat-label"><%= stat._id %> Files</p>
        </div>
        <% }) %>
        <div class="stat-card">
          <div class="stat-number"><%= (totalSize / (1024 * 1024)).toFixed(1) %></div>
          <p class="stat-label">MB Total</p>
        </div>
      </div>

      <!-- Filters -->
      <div class="media-filters">
        <div class="filter-group">
          <label class="filter-label">Search:</label>
          <input 
            type="text" 
            class="filter-input" 
            id="searchInput"
            placeholder="Search files..."
            value="<%= filters.search %>"
          />
        </div>
        
        <div class="filter-group">
          <label class="filter-label">Category:</label>
          <select class="filter-select" id="categoryFilter">
            <option value="">All Categories</option>
            <option value="image" <%= filters.category === 'image' ? 'selected' : '' %>>Images</option>
            <option value="document" <%= filters.category === 'document' ? 'selected' : '' %>>Documents</option>
            <option value="video" <%= filters.category === 'video' ? 'selected' : '' %>>Videos</option>
            <option value="audio" <%= filters.category === 'audio' ? 'selected' : '' %>>Audio</option>
          </select>
        </div>

        <div class="filter-group">
          <label class="filter-label">Sort:</label>
          <select class="filter-select" id="sortFilter">
            <option value="newest" <%= filters.sort === 'newest' ? 'selected' : '' %>>Newest First</option>
            <option value="oldest" <%= filters.sort === 'oldest' ? 'selected' : '' %>>Oldest First</option>
            <option value="name" <%= filters.sort === 'name' ? 'selected' : '' %>>Name</option>
            <option value="size" <%= filters.sort === 'size' ? 'selected' : '' %>>Size</option>
            <option value="usage" <%= filters.sort === 'usage' ? 'selected' : '' %>>Most Used</option>
          </select>
        </div>
      </div>

      <!-- Media Grid -->
      <div class="media-grid">
        <div class="grid-header">
          <h3>Media Files (<%= media.length %>)</h3>
          <div class="view-toggles">
            <button class="view-toggle active" data-view="grid">
              <i class="fas fa-th"></i>
            </button>
            <button class="view-toggle" data-view="list">
              <i class="fas fa-list"></i>
            </button>
          </div>
        </div>

        <% if (media.length > 0) { %>
        <div class="media-items" id="mediaGrid">
          <% media.forEach(item => { %>
          <div 
            class="media-item" 
            data-id="<%= item._id %>" 
            data-media-title="<%= item.title || item.originalName %>"
            tabindex="0"
            role="button"
            aria-label="View details for <%= item.title || item.originalName %>"
          >
            <div class="media-preview">
              <% if (item.category === 'image') { %>
                <img 
                  src="<%= item.url %>" 
                  alt="<%= item.alt || item.title %>" 
                  loading="lazy"
                  class="media-image"
                  data-lightbox-url="<%= item.url %>"
                  data-lightbox-title="<%= item.title || item.originalName %>"
                  style="cursor: zoom-in;"
                />
              <% } else { %>
                <i class="file-icon fas fa-<%= item.fileType === 'pdf' ? 'file-pdf' : item.fileType === 'document' ? 'file-word' : item.fileType === 'video' ? 'file-video' : item.fileType === 'audio' ? 'file-audio' : 'file' %>"></i>
              <% } %>
            </div>
            <div class="media-info">
              <div class="media-title"><%= item.title || item.originalName %></div>
              <div class="media-meta">
                <span><%= item.formattedSize %></span>
                <span class="media-type"><%= item.category %></span>
              </div>
              <div class="click-hint" style="font-size: 0.7rem; color: #3498db; margin-top: 0.25rem; opacity: 0.7;">
                <i class="fas fa-mouse-pointer"></i> Click to view
              </div>
            </div>
          </div>
          <% }) %>
        </div>
        <% } else { %>
        <div class="empty-state">
          <i class="fas fa-images"></i>
          <h3>No Media Files Found</h3>
          <p>Upload some files to get started with your media library.</p>
          <a href="/admin/media/upload" class="upload-btn" style="display: inline-flex; margin-top: 1rem;">
            <i class="fas fa-plus"></i>
            Upload Your First File
          </a>
        </div>
        <% } %>
      </div>

      <!-- Pagination -->
      <% if (pagination.total > 1) { %>
      <div class="pagination">
        <% if (pagination.hasPrev) { %>
          <a href="?page=<%= pagination.prev %>&category=<%= filters.category %>&search=<%= filters.search %>&sort=<%= filters.sort %>">
            <i class="fas fa-chevron-left"></i> Previous
          </a>
        <% } %>
        
        <span class="current">Page <%= pagination.current %> of <%= pagination.total %></span>
        
        <% if (pagination.hasNext) { %>
          <a href="?page=<%= pagination.next %>&category=<%= filters.category %>&search=<%= filters.search %>&sort=<%= filters.sort %>">
            Next <i class="fas fa-chevron-right"></i>
          </a>
        <% } %>
      </div>
      <% } %>
    </div>

    <!-- Image Lightbox -->
    <div class="lightbox" id="imageLightbox">
      <div class="lightbox-content">
        <button class="lightbox-close" id="lightboxCloseBtn">
          <i class="fas fa-times"></i>
        </button>
        <img class="lightbox-image" id="lightboxImage" src="" alt="">
        <div class="lightbox-title" id="lightboxTitle"></div>
      </div>
    </div>

    <script>
      // Filter functionality
      const searchInput = document.getElementById('searchInput');
      const categoryFilter = document.getElementById('categoryFilter');
      const sortFilter = document.getElementById('sortFilter');
      const mediaGrid = document.getElementById('mediaGrid');
      const viewToggles = document.querySelectorAll('.view-toggle');

      // Debounce function for search
      function debounce(func, wait) {
        let timeout;
        return function executedFunction(...args) {
          const later = () => {
            clearTimeout(timeout);
            func(...args);
          };
          clearTimeout(timeout);
          timeout = setTimeout(later, wait);
        };
      }

      // Apply filters
      function applyFilters() {
        const params = new URLSearchParams();
        if (searchInput.value) params.set('search', searchInput.value);
        if (categoryFilter.value) params.set('category', categoryFilter.value);
        if (sortFilter.value) params.set('sort', sortFilter.value);
        
        window.location.href = `/admin/media?${params.toString()}`;
      }

      // Event listeners
      searchInput.addEventListener('input', debounce(applyFilters, 500));
      categoryFilter.addEventListener('change', applyFilters);
      sortFilter.addEventListener('change', applyFilters);

      // View toggle functionality
      viewToggles.forEach(toggle => {
        toggle.addEventListener('click', () => {
          viewToggles.forEach(t => t.classList.remove('active'));
          toggle.classList.add('active');
          
          const view = toggle.dataset.view;
          if (view === 'list') {
            mediaGrid.classList.add('list-view');
            mediaGrid.querySelectorAll('.media-item').forEach(item => {
              item.classList.add('list-view');
              item.querySelector('.media-preview').classList.add('list-view');
              item.querySelector('.media-info').classList.add('list-view');
            });
          } else {
            mediaGrid.classList.remove('list-view');
            mediaGrid.querySelectorAll('.media-item').forEach(item => {
              item.classList.remove('list-view');
              item.querySelector('.media-preview').classList.remove('list-view');
              item.querySelector('.media-info').classList.remove('list-view');
            });
          }
        });
      });

      // Media details navigation
      function openMediaDetails(mediaId) {
        // Add loading state
        const mediaItem = document.querySelector(`[data-id="${mediaId}"]`);
        if (mediaItem) {
          mediaItem.style.opacity = '0.7';
          mediaItem.style.pointerEvents = 'none';
          
          // Add loading indicator
          const loadingIndicator = document.createElement('div');
          loadingIndicator.style.cssText = `
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(52, 152, 219, 0.95);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            font-size: 0.8rem;
            z-index: 20;
          `;
          loadingIndicator.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Loading...';
          mediaItem.appendChild(loadingIndicator);
        }
        
        window.location.href = `/admin/media/${mediaId}`;
      }

      // Keyboard navigation for media items
      function handleMediaKeydown(event, mediaId) {
        if (event.key === 'Enter' || event.key === ' ') {
          event.preventDefault();
          openMediaDetails(mediaId);
        }
      }

      // Image lightbox functionality
      function openImageLightbox(imageUrl, imageTitle) {
        const lightbox = document.getElementById('imageLightbox');
        const lightboxImage = document.getElementById('lightboxImage');
        const lightboxTitle = document.getElementById('lightboxTitle');
        
        lightboxImage.src = imageUrl;
        lightboxImage.alt = imageTitle;
        lightboxTitle.textContent = imageTitle;
        
        lightbox.classList.add('show');
        document.body.style.overflow = 'hidden';
      }

      function closeLightbox() {
        const lightbox = document.getElementById('imageLightbox');
        lightbox.classList.remove('show');
        document.body.style.overflow = '';
      }

      // Close lightbox with Escape key
      document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape') {
          closeLightbox();
        }
      });

      // Initialize event listeners when DOM is loaded
      document.addEventListener('DOMContentLoaded', function() {
        // Media item click handlers
        document.querySelectorAll('.media-item').forEach(item => {
          const mediaId = item.dataset.id;
          
          // Click handler for media item
          item.addEventListener('click', function() {
            openMediaDetails(mediaId);
          });
          
          // Keyboard handler for media item
          item.addEventListener('keydown', function(event) {
            if (event.key === 'Enter' || event.key === ' ') {
              event.preventDefault();
              openMediaDetails(mediaId);
            }
          });
        });

        // Image lightbox handlers
        document.querySelectorAll('.media-image').forEach(image => {
          image.addEventListener('click', function(event) {
            event.stopPropagation();
            const url = this.dataset.lightboxUrl;
            const title = this.dataset.lightboxTitle;
            openImageLightbox(url, title);
          });
        });

        // Lightbox close handlers
        const lightbox = document.getElementById('imageLightbox');
        const lightboxClose = document.getElementById('lightboxCloseBtn');
        const lightboxContent = lightbox.querySelector('.lightbox-content');

        // Close when clicking on backdrop
        lightbox.addEventListener('click', function(event) {
          if (event.target === lightbox) {
            closeLightbox();
          }
        });

        // Close button
        lightboxClose.addEventListener('click', closeLightbox);

        // Prevent content clicks from closing lightbox
        lightboxContent.addEventListener('click', function(event) {
          event.stopPropagation();
        });
      });
    </script>
  </body>
</html>
